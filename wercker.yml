box: plasticine/aerobic.io@0.0.7
services:
    - wercker/postgresql
    - wercker/redis
build:
    # The steps that will be executed on build
    steps:
        # Setup ssh-key for accessing the garmin-communicator repo
        - add-ssh-key:
            keyname: GARMIN_COMMUNICATOR_KEY
        # Copy the dotenv config file into place
        - script:
            name: setup dotenv
            code: cp -n .env.example .env
        # Start the xvfb framebuffer
        - script:
            name: start xvfb
            code: |
                export DISPLAY=":99.0"
                start-stop-daemon --start --quiet --pidfile /tmp/xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset
                sleep 3
                cat /tmp/xvfb_99.pid
        # A step that executes `bundle install` command
        - bundle-install
        # A step that executes `npm install`
        - npm-install:
            options: --production
        # A step that prepares the database.yml with settings from the database you defined in services
        - rails-database-yml
        - script:
            name: db setup
            code: RAILS_ENV=test bundle exec rake db:structure:load
        - script:
            name: consistency fail
            code: RAILS_ENV=test bundle exec consistency_fail
        - script:
            name: rubocop
            code: bundle exec rubocop
        - script:
            name: best practices
            code: bundle exec rails_best_practices .
        - script:
            name: teaspoon
            code: RAILS_ENV=test bundle exec teaspoon
        - script:
            name: rspec
            code: bundle exec rspec --format=progress
        - script:
            name: cucumber
            code: bundle exec cucumber
        - script:
            name: quality
            code: bundle exec rake quality
    after-steps:
        - plasticine/librato-build-metrics@0.0.18:
            user: $LIBRATO_USER
            token: $LIBRATO_TOKEN
            namespace: aerobicio
        - sherzberg/slack-notify:
            subdomain: aerobic
            token: $SLACK_TOKEN
            channel: general

deploy:
    steps:
        - heroku-deploy:
            key-name: HEROKU_KEY
        - script:
            name: Migrate Database
            code: heroku run rake db:migrate --app $HEROKU_APP_NAME
        - script:
            name: Clear Rails Cache
            code: heroku run rails runner -e production Rails.cache.clear --app $HEROKU_APP_NAME
    after-steps:
        - sherzberg/slack-notify:
            subdomain: aerobic
            token: $SLACK_TOKEN
            channel: general
